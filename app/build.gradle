buildscript {
    repositories {
        mavenCentral ()
        maven { url "http://dl.bintray.com/populov/maven" }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:1.2.3'
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.4'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'android-apt'

def AAVersion = '3.1'
def ANDROID_HOME = System.getenv("ANDROID_HOME")

repositories {
    maven { url "http://dl.bintray.com/populov/maven" }
    mavenCentral ()
    maven { url "http://maven.oschina.net/content/groups/public/" }
    maven { url "$ANDROID_HOME/extras/android/m2repository" }
}

android {
    compileSdkVersion 22
    buildToolsVersion "22.0.1"

    productFlavors {
        portal {}
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCTES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

    sourceSets {
        main {
            //manifest.srcFile 'AndroidManifest.xml'
            //java.srcDirs = ['src']
            //resources.srcDirs = ['src']
            //aidl.srcDirs = ['src']
            //renderscript.srcDirs = ['src']
            //res.srcDirs = ['res']
            //assets.srcDirs = ['assets']
        }
        instrumentTest.setRoot("tests")
    }

    signingConfigs {
        release {
            storeFile file("bonus.jks")
            storePassword "1q2w3e4r"
            keyAlias "bonus"
            keyPassword "1q2w3e4r"
        }
    }

    defaultConfig {
        applicationId "com.game.snda.gameassistant"
        minSdkVersion 10
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:support-v4:22.0.+'
    compile 'com.viewpagerindicator:library:2.4.1@aar'
    compile 'com.android.support:appcompat-v7:22.2.1'
    compile 'com.android.support:design:22.2.0'
    compile 'com.android.support:cardview-v7:22.+'
    compile 'com.android.support:recyclerview-v7:22.+'
    apt "org.androidannotations:androidannotations:$AAVersion"
    compile "org.androidannotations:androidannotations-api:$AAVersion"
    compile files('libs/androidasync-2.0.0.jar')
    compile files('libs/gson-2.2.4.jar')
    compile files('libs/httpmime-4.1.3.jar')
    compile files('libs/universal-image-loader-1.9.0.jar')
}

apt {
    arguments {
        androidManifestFile variant.outputs[0].processResources.manifestFile
        resourcePackageName 'com.game.snda.gameassistant'
    }
}

def processManifest(variant) {
    variant.outputs.each { output ->
        println 'output:' + output
        output.processManifest.doLast {
            copy {
                from("${buildDir}/intermediates/manifests/full") {
                    include "${variant.dirName}/AndroidManifest.xml"
                }
                into("${buildDir}/intermediates/processed_manifests")
            }

            def manifestFile = file("${buildDir}/intermediates/processed_manifests/${variant.dirName}/AndroidManifest.xml");
            // 替换AndroidManifest.xml的GAME_ASSISTANT字符串为渠道名称
            def channelName = variant.productFlavors.get(0).name;
//            def packagename = variant.productFlavors.get(0).applicationId + (variant.buildType.applicationIdSuffix ?: "");
            def content = manifestFile.getText("UTF-8").replaceAll("GAME_ASSISTANT", channelName + "_rel");
            manifestFile.write(content, "UTF-8");
        }
        output.processResources.manifestFile = file("${buildDir}/intermediates/processed_manifests/${variant.dirName}/AndroidManifest.xml");
    }
}

android.applicationVariants.all { variant ->
    processManifest(variant);
}